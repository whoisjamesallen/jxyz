var bProd=!1,CLEAR_COLOR=[0,0,0,1],GEOMETRY_ORIGIN=[-1e3,-1e3],GEOMETRY_SIZE=2e3,SIZE_OF_FLOAT=4,VERT_STRIDE=7,TEXCOORD_OFFSET=3,OCEANCOORD_OFFSET=5,TEXTURE_COORDINATES_UNIT=1,OCEAN_COORDINATES_UNIT=2,SLICES_TEXTURE_UNIT=0,NOISE_TEXTURE_UNIT=1,FOV=60/180*Math.PI,NEAR=1,FAR=1e4,MIN_ASPECT=16/9,NONE=0,ORBITING=1,CAMERA_DISTANCE=1600,addToVector=function(e,n,t){return e[0]=n[0]+t[0],e[1]=n[1]+t[1],e[2]=n[2]+t[2],e},subtractFromVector=function(e,n,t){return e[0]=n[0]-t[0],e[1]=n[1]-t[1],e[2]=n[2]-t[2],e},multiplyVectorByScalar=function(e,n,t){return e[0]=n[0]*t,e[1]=n[1]*t,e[2]=n[2]*t,e},makeIdentityMatrix=function(e){return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e},makeXRotationMatrix=function(e,n){return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=Math.cos(n),e[6]=Math.sin(n),e[7]=0,e[8]=0,e[9]=-Math.sin(n),e[10]=Math.cos(n),e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e},makeYRotationMatrix=function(e,n){return e[0]=Math.cos(n),e[1]=0,e[2]=-Math.sin(n),e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=Math.sin(n),e[9]=0,e[10]=Math.cos(n),e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e},distanceBetweenVectors=function(e,n){var t=n[0]-e[0],o=n[1]-e[1],a=n[2]-e[2];return Math.sqrt(t*t+o*o+a*a)},lengthOfVector=function(e){var n=e[0],t=e[1],o=e[2];return Math.sqrt(n*n+t*t+o*o)},normaliseVector=function(e,n){},setVector4=function(e,n,t,o,a){return e[0]=n,e[1]=t,e[2]=o,e[3]=a,e},projectVector4=function(e,n){var t=1/n[3];return e[0]=n[0]*t,e[1]=n[1]*t,e[2]=n[2]*t,e},transformVectorByMatrix=function(e,n,t){var o=n[0],a=n[1],i=n[2],r=n[3];return e[0]=t[0]*o+t[4]*a+t[8]*i+t[12]*r,e[1]=t[1]*o+t[5]*a+t[9]*i+t[13]*r,e[2]=t[2]*o+t[6]*a+t[10]*i+t[14]*r,e[3]=t[3]*o+t[7]*a+t[11]*i+t[15]*r,e},invertMatrix=function(e,n){var t=n[0],o=n[4],a=n[8],i=n[12],r=n[1],$=n[5],u=n[9],s=n[13],c=n[2],l=n[6],d=n[10],_=n[14],m=n[3],f=n[7],v=n[11],p=n[15],E=d*p,g=_*v,T=l*p,w=_*f,R=l*v,h=d*f,S=c*p,x=_*m,A=c*v,F=d*m,L=c*f,b=l*m,O=a*s,U=i*u,y=o*s,M=i*$,I=o*u,C=a*$,N=t*s,B=i*r,X=t*u,P=a*r,D=t*$,Y=o*r,q=E*$+w*u+R*s-(g*$+T*u+h*s),G=g*r+S*u+F*s-(E*r+x*u+A*s),z=T*r+x*$+L*s-(w*r+S*$+b*s),V=h*r+A*$+b*u-(R*r+F*$+L*u),k=1/(t*q+o*G+a*z+i*V);return e[0]=k*q,e[1]=k*G,e[2]=k*z,e[3]=k*V,e[4]=k*(g*o+T*a+h*i-(E*o+w*a+R*i)),e[5]=k*(E*t+x*a+A*i-(g*t+S*a+F*i)),e[6]=k*(w*t+S*o+b*i-(T*t+x*o+L*i)),e[7]=k*(R*t+F*o+L*a-(h*t+A*o+b*a)),e[8]=k*(O*f+M*v+I*p-(U*f+y*v+C*p)),e[9]=k*(U*m+N*v+P*p-(O*m+B*v+X*p)),e[10]=k*(y*m+B*f+D*p-(M*m+N*f+Y*p)),e[11]=k*(C*m+X*f+Y*v-(I*m+P*f+D*v)),e[12]=k*(y*d+C*_+U*l-(I*_+O*l+M*d)),e[13]=k*(X*_+O*c+B*d-(N*d+P*_+U*c)),e[14]=k*(N*l+Y*_+M*c-(D*_+y*c+B*l)),e[15]=k*(D*d+I*c+P*l-(X*l+Y*d+C*c)),e},premultiplyMatrix=function(e,n,t){var o=t[0],a=t[4],i=t[8],r=t[12],$=t[1],u=t[5],s=t[9],c=t[13],l=t[2],d=t[6],_=t[10],m=t[14],f=t[3],v=t[7],p=t[11],E=t[15],g=n[0],T=n[1],w=n[2],R=n[3];return e[0]=o*g+a*T+i*w+r*R,e[1]=$*g+u*T+s*w+c*R,e[2]=l*g+d*T+_*w+m*R,e[3]=f*g+v*T+p*w+E*R,g=n[4],T=n[5],w=n[6],R=n[7],e[4]=o*g+a*T+i*w+r*R,e[5]=$*g+u*T+s*w+c*R,e[6]=l*g+d*T+_*w+m*R,e[7]=f*g+v*T+p*w+E*R,g=n[8],T=n[9],w=n[10],R=n[11],e[8]=o*g+a*T+i*w+r*R,e[9]=$*g+u*T+s*w+c*R,e[10]=l*g+d*T+_*w+m*R,e[11]=f*g+v*T+p*w+E*R,g=n[12],T=n[13],w=n[14],R=n[15],e[12]=o*g+a*T+i*w+r*R,e[13]=$*g+u*T+s*w+c*R,e[14]=l*g+d*T+_*w+m*R,e[15]=f*g+v*T+p*w+E*R,e},makePerspectiveMatrix=function(e,n,t,o,a){var i=Math.tan(.5*(Math.PI-n)),r=o-a;return e[0]=i/t,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=i,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=a/r,e[11]=-1,e[12]=0,e[13]=0,e[14]=o*a/r,e[15]=0,e},clamp=function(e,n,t){return Math.min(Math.max(e,n),t)},log2=function(e){return Math.log(e)/Math.log(2)},hexToRgb=function(e){var n=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);return n?[parseInt(n[1],16)/255,parseInt(n[2],16)/255,parseInt(n[3],16)/255]:null},buildProgramWrapper=function(e,n,t,o){var a={},i=e.createProgram();for(var r in e.attachShader(i,n),e.attachShader(i,t),o)e.bindAttribLocation(i,o[r],r);e.linkProgram(i);for(var $={},u=e.getProgramParameter(i,e.ACTIVE_UNIFORMS),s=0;s<u;s+=1){var c=e.getActiveUniform(i,s),l=e.getUniformLocation(i,c.name);$[c.name]=l}return a.program=i,a.uniformLocations=$,a},buildShader=function(e,n,t){var o=e.createShader(n);return e.shaderSource(o,t),e.compileShader(o),o},buildTexture=function(e,n,t,o,a,i,r,$,u,s,c){var l=e.createTexture();return e.activeTexture(e.TEXTURE0+n),e.bindTexture(e.TEXTURE_2D,l),e.texImage2D(e.TEXTURE_2D,0,t,a,i,0,t,o,r),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,$),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,u),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,s),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,c),l},buildFramebuffer=function(e,n){var t=e.createFramebuffer();return e.bindFramebuffer(e.FRAMEBUFFER,t),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0),t},epsilon=function(e){return 1e-6>Math.abs(e)?0:e},toCSSMatrix=function(e){return"matrix3d("+epsilon(e[0])+","+-epsilon(e[1])+","+epsilon(e[2])+","+epsilon(e[3])+","+epsilon(e[4])+","+-epsilon(e[5])+","+epsilon(e[6])+","+epsilon(e[7])+","+epsilon(e[8])+","+-epsilon(e[9])+","+epsilon(e[10])+","+epsilon(e[11])+","+epsilon(e[12])+","+-epsilon(e[13])+","+epsilon(e[14])+","+epsilon(e[15])+")"},setPerspective=function(e,n){e.style.WebkitPerspective=n,e.style.perspective=n},setTransformOrigin=function(e,n){e.style.WebkitTransformOrigin=n,e.style.transformOrigin=n},setTransform=function(e,n){e.style.WebkitTransform=n,e.style.transform=n},setText=function(e,n,t){e.textContent=n.toFixed(t)},getMousePosition=function(e,n){var t=n.getBoundingClientRect();return{x:e.clientX-t.left,y:e.clientY-t.top}},hasWebGLSupportWithExtensions=function(e){var n=document.createElement("canvas"),t=null;try{t=n.getContext("webgl")||n.getContext("experimental-webgl")}catch(o){return!1}if(null===t)return!1;for(var a=0;a<e.length;++a)if(null===t.getExtension(e[a]))return!1;return!0},requestAnimationFrame=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.msRequestAnimationFrame,Camera=function(e){var e=e,n=makeIdentityMatrix(new Float32Array(16)),t=new Float32Array(3);this.changeAzimuth=function(n){e.camRotX+=n},this.changeElevation=function(n){e.camRotY+=n};var o=makeIdentityMatrix(new Float32Array(16)),a=new Float32Array(16),i=new Float32Array(16),r=makeIdentityMatrix(new Float32Array(16));this.getViewMatrix=function(){makeIdentityMatrix(n);var $=1-2*e.mouseEasedX,u=e.camRotX;u+=e.camRotMouseX*$;var s=-((1-2*e.mouseEasedY)*1),c=e.camRotY;return makeXRotationMatrix(a,c+=e.camRotMouseY*s),makeYRotationMatrix(i,u),r[14]=-e.camDistance,o[12]=e.camOffsetX,o[13]=e.camOffsetY,o[14]=e.camOffsetZ,premultiplyMatrix(n,n,o),premultiplyMatrix(n,n,i),premultiplyMatrix(n,n,a),premultiplyMatrix(n,n,r),t[0]=e.camDistance*Math.sin(Math.PI/2-c)*Math.sin(-u),t[1]=e.camDistance*Math.cos(Math.PI/2-c),t[2]=e.camDistance*Math.sin(Math.PI/2-c)*Math.cos(-u),n}},OCEAN_VERTEX_SOURCE="precision highp float;\nattribute vec3 a_position;\nattribute vec2 a_texcoord;\nattribute vec2 a_oceancoord;\nvarying vec3 v_position;\nvarying vec2 v_texcoord;\nvarying vec2 v_oceancoord;\nvarying vec3 v_displacement;\nvarying vec3 v_pointlight;\nuniform mat4 u_projectionMatrix;\nuniform mat4 u_viewMatrix;\nuniform float u_time;\nuniform float u_size;\nuniform float u_wave_size;\nuniform vec3 u_wave_scale;\nuniform vec3 u_color_bot;\nuniform vec3 u_color_top;\nuniform float u_wave_0_direction;\nuniform float u_wave_0_frequency;\nuniform float u_wave_0_amplitude;\nuniform float u_wave_0_steepness;\nuniform float u_wave_0_speed;\nuniform float u_wave_1_direction;\nuniform float u_wave_1_frequency;\nuniform float u_wave_1_amplitude;\nuniform float u_wave_1_steepness;\nuniform float u_wave_1_speed;\nuniform float u_wave_2_direction;\nuniform float u_wave_2_frequency;\nuniform float u_wave_2_amplitude;\nuniform float u_wave_2_steepness;\nuniform float u_wave_2_speed;\nuniform float u_wave_3_direction;\nuniform float u_wave_3_frequency;\nuniform float u_wave_3_amplitude;\nuniform float u_wave_3_steepness;\nuniform float u_wave_3_speed;\nuniform vec3 u_point_light_pos;\nuniform vec3 u_point_light_scale;\nuniform vec3 u_point_light_properties;\nconst float frequencyScale = 0.02;\nconst float amplitudeScale = 100.0;\nconst float steepnessScale = 1.0;\nvec3 gerstner_wave(vec2 position, vec2 direction, float frequency, float amplitude, float steepness, float speed) {\nfloat proj = dot(position, direction);\nfloat theta = proj * frequency + speed;\nfloat height = amplitude * sin(theta);\nfloat maximum_width = steepness * amplitude;\nfloat width = maximum_width * cos(theta);\nvec3 displacement = vec3(0.0);\ndisplacement.x = direction.x * width;\ndisplacement.y = height;\ndisplacement.z = direction.y * width;\nreturn displacement;\n}\nvec3 wave(vec2 position, float direction, float frequency, float amplitude, float steepness, float speed) {\nfloat angle = direction * 3.14159265359 * 2.0;\nvec2 dir = vec2(sin(angle), cos(angle));\nfrequency *= frequencyScale;\namplitude *= amplitudeScale;\nsteepness *= steepnessScale;\nspeed *= u_time;\nreturn gerstner_wave(position, dir, frequency, amplitude, steepness, speed);\n}\nvoid main (void) {\nvec3 displacement = vec3(0.0);\ndisplacement += wave(a_position.xz, u_wave_0_direction, u_wave_0_frequency, u_wave_0_amplitude, u_wave_0_steepness, u_wave_0_speed);\ndisplacement += wave(a_position.xz, u_wave_1_direction, u_wave_1_frequency, u_wave_1_amplitude, u_wave_1_steepness, u_wave_1_speed);\ndisplacement += wave(a_position.xz, u_wave_2_direction, u_wave_2_frequency, u_wave_2_amplitude, u_wave_2_steepness, u_wave_2_speed);\ndisplacement += wave(a_position.xz, u_wave_3_direction, u_wave_3_frequency, u_wave_3_amplitude, u_wave_3_steepness, u_wave_3_speed);\nvec3 position = a_position + displacement * u_wave_scale * vec3(u_wave_size);\nfloat pointBrightness = 0.0;\nbool bPointLight = (u_point_light_properties.x > 0.0);\nif(bPointLight) {\n   float pointLightRange = u_point_light_properties.y;\n   float dist = distance((position - u_point_light_pos) * (vec3(1.0) / u_point_light_scale), vec3(0.0));\n   if(dist <= pointLightRange) {\n       pointBrightness = 1.0 - (dist / pointLightRange);\n       pointBrightness *= u_point_light_properties.z;\n   }\n}\nv_position = position;\nv_texcoord = a_texcoord;\nv_oceancoord = a_oceancoord;\nv_displacement = displacement / vec3((u_wave_0_amplitude + u_wave_1_amplitude + u_wave_2_amplitude + u_wave_3_amplitude) * amplitudeScale);\nv_pointlight = vec3(pointBrightness, pointBrightness, pointBrightness);\ngl_Position = u_projectionMatrix * u_viewMatrix * vec4(position, 1.0);\n}",OCEAN_FRAGMENT_SOURCE="precision highp float;\nvarying vec3 v_position;\nvarying vec2 v_texcoord;\nvarying vec2 v_oceancoord;\nvarying vec3 v_displacement;\nvarying vec3 v_pointlight;\nuniform float u_color_mark;\nuniform float u_color_shadow;\nuniform vec3 u_color_bot;\nuniform vec3 u_color_top;\nfloat map(float value, float inputMin, float inputMax, float outputMin, float outputMax) {\nfloat mapValue = ((value - inputMin) / (inputMax - inputMin) * (outputMax - outputMin) + outputMin);\nreturn clamp(mapValue, 0.0, 1.0);\n}\nvoid main (void) {\nfloat colorStop = map(v_texcoord.y, u_color_mark, 1.0, 0.0, 1.0);\nvec3 color = u_color_bot + (u_color_top - u_color_bot) * colorStop;\nfloat shadowMin = 1.0 - u_color_shadow;\nfloat shadowMax = 1.0;\nfloat shadow = map(v_displacement.y, 0.0, 1.0, shadowMin, shadowMax);\ncolor *= vec3(shadow);\ncolor += v_pointlight;\ngl_FragColor = vec4(color, 1.0);\n}",NOISE_VERTEX_SOURCE="attribute vec2 a_position;\nvarying vec2 v_coordinates;\nvoid main (void) {\nv_coordinates = a_position * 0.5 + 0.5;\ngl_Position = vec4(a_position, 0.0, 1.0);\n}",NOISE_FRAGMENT_SOURCE="precision highp float;\nuniform float u_width;\nuniform float u_height;\nuniform float u_time;\nuniform float u_grain_size;\nvarying vec2 v_coordinates;\nconst float permTexUnit = 1.0/256.0;\nconst float permTexUnitHalf = 0.5/256.0;\nvec4 rnm(vec2 tc)\n{\nfloat noise =  sin(dot(tc + vec2(u_time,u_time),vec2(12.9898,78.233))) * 43758.5453;\nfloat noiseR =  fract(noise)*2.0-1.0;\nfloat noiseG =  fract(noise*1.2154)*2.0-1.0;\nfloat noiseB =  fract(noise*1.3453)*2.0-1.0;\nfloat noiseA =  fract(noise*1.3647)*2.0-1.0;\nreturn vec4(noiseR,noiseG,noiseB,noiseA);\n}\nfloat fade(in float t) {\nreturn t*t*t*(t*(t*6.0-15.0)+10.0);\n}\nfloat pnoise3D(in vec3 p)\n{\nvec3 pi = permTexUnit*floor(p)+permTexUnitHalf;\nvec3 pf = fract(p);\nfloat perm00 = rnm(pi.xy).a;\nvec3  grad000 = rnm(vec2(perm00, pi.z)).rgb * 4.0 - 1.0;\nfloat n000 = dot(grad000, pf);\nvec3  grad001 = rnm(vec2(perm00, pi.z + permTexUnit)).rgb * 4.0 - 1.0;\nfloat n001 = dot(grad001, pf - vec3(0.0, 0.0, 1.0));\nfloat perm01 = rnm(pi.xy + vec2(0.0, permTexUnit)).a;\nvec3  grad010 = rnm(vec2(perm01, pi.z)).rgb * 4.0 - 1.0;\nfloat n010 = dot(grad010, pf - vec3(0.0, 1.0, 0.0));\nvec3  grad011 = rnm(vec2(perm01, pi.z + permTexUnit)).rgb * 4.0 - 1.0;\nfloat n011 = dot(grad011, pf - vec3(0.0, 1.0, 1.0));\nfloat perm10 = rnm(pi.xy + vec2(permTexUnit, 0.0)).a;\nvec3  grad100 = rnm(vec2(perm10, pi.z)).rgb * 4.0 - 1.0;\nfloat n100 = dot(grad100, pf - vec3(1.0, 0.0, 0.0));\nvec3  grad101 = rnm(vec2(perm10, pi.z + permTexUnit)).rgb * 4.0 - 1.0;\nfloat n101 = dot(grad101, pf - vec3(1.0, 0.0, 1.0));\nfloat perm11 = rnm(pi.xy + vec2(permTexUnit, permTexUnit)).a;\nvec3  grad110 = rnm(vec2(perm11, pi.z)).rgb * 4.0 - 1.0;\nfloat n110 = dot(grad110, pf - vec3(1.0, 1.0, 0.0));\nvec3  grad111 = rnm(vec2(perm11, pi.z + permTexUnit)).rgb * 4.0 - 1.0;\nfloat n111 = dot(grad111, pf - vec3(1.0, 1.0, 1.0));\nvec4 n_x = mix(vec4(n000, n001, n010, n011), vec4(n100, n101, n110, n111), fade(pf.x));\nvec2 n_xy = mix(n_x.xy, n_x.zw, fade(pf.y));\nfloat n_xyz = mix(n_xy.x, n_xy.y, fade(pf.z));\nreturn n_xyz;\n}\nvec2 coordRot(in vec2 tc, in float angle)\n{\nfloat aspect = u_width/u_height;\nfloat rotX = ((tc.x*2.0-1.0)*aspect*cos(angle)) - ((tc.y*2.0-1.0)*sin(angle));\nfloat rotY = ((tc.y*2.0-1.0)*cos(angle)) + ((tc.x*2.0-1.0)*aspect*sin(angle));\nrotX = ((rotX/aspect)*0.5+0.5);\nrotY = rotY*0.5+0.5;\nreturn vec2(rotX,rotY);\n}\nvoid main (void) {\nvec3 rotOffset = vec3(1.425,3.892,5.835);\nvec2 rotCoordsR = coordRot(v_coordinates, u_time + rotOffset.x);\nvec3 noise = vec3( pnoise3D(vec3(rotCoordsR * vec2(u_width / u_grain_size, u_height / u_grain_size), 0.0)));\ngl_FragColor = vec4(noise, 1.0);\n}",FULLSCREEN_VERTEX_SOURCE="attribute vec2 a_position;\nvarying vec2 v_coordinates;\nvoid main (void) {\nv_coordinates = a_position * 0.5 + 0.5;\ngl_Position = vec4(a_position, 0.0, 1.0);\n}",FULLSCREEN_FRAGMENT_SOURCE="precision highp float;\nuniform sampler2D u_texture;\nuniform sampler2D u_noise;\nuniform float u_grain_amount;\nuniform float u_grain_luminance;\nvarying vec2 v_coordinates;\nvoid main (void) {\nvec3 color = texture2D(u_texture, v_coordinates).rgb;\nvec3 noise = texture2D(u_noise, v_coordinates).rgb;\nvec3 lumcoeff = vec3(0.299,0.587,0.114);\nfloat luminance = mix(0.0,dot(color, lumcoeff), u_grain_luminance);\nfloat lum = smoothstep(0.2,0.0,luminance);\nlum += luminance;\nnoise = mix(noise,vec3(0.0),pow(lum,4.0));\ncolor = color + (noise * u_grain_amount);\ngl_FragColor = vec4(color, 1.0);\n}",Simulator=function(e,n,t,o){var e=e,a=n,i=t;e.width=a,e.height=i;var r=e.getContext("webgl")||e.getContext("experimental-webgl"),$=!0,o=o,u=0,s=0,c=0,l=!0,d=[],_=[],m=null,f=null,v=Math.floor(o.slicesTotal),p=Math.floor(o.sliceSegments),E=o.sliceLengthScale,g=o.sliceSpaceScale;this.initGeometry=function(){d=[],_=[];var e,n,t,o,a,i,$,u,s,c,l,T,w,R,h=GEOMETRY_SIZE*E,S=GEOMETRY_SIZE*g,x=.4*GEOMETRY_SIZE,A=-x,F=S/(v-1);for(t=0;t<v;t++){for(e=0,s=t/(v-1),i=t*F-.5*S,c=t*(p+1)*2;e<p+1;e++)for(n=0,o=($=e/p)*h-.5*h;n<2;n++)a=A+(u=n)*x,d.push(o),d.push(a),d.push(i),d.push($),d.push(u),d.push($),d.push(s);for(e=0;e<p;e++)l=c+(e+0)*2+0,T=c+(e+0)*2+1,w=c+(e+1)*2+0,R=c+(e+1)*2+1,_.push(l),_.push(T),_.push(R),_.push(R),_.push(w),_.push(l)}null!=m&&(r.deleteBuffer(m),m=null),null!=f&&(r.deleteBuffer(f),f=null),m=r.createBuffer(),r.bindBuffer(r.ARRAY_BUFFER,m),r.bufferData(r.ARRAY_BUFFER,new Float32Array(d),r.STATIC_DRAW),r.vertexAttribPointer(TEXTURE_COORDINATES_UNIT,2,r.FLOAT,!1,VERT_STRIDE*SIZE_OF_FLOAT,TEXCOORD_OFFSET*SIZE_OF_FLOAT),r.vertexAttribPointer(OCEAN_COORDINATES_UNIT,2,r.FLOAT,!1,VERT_STRIDE*SIZE_OF_FLOAT,OCEANCOORD_OFFSET*SIZE_OF_FLOAT),f=r.createBuffer(),r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,f),r.bufferData(r.ELEMENT_ARRAY_BUFFER,new Uint16Array(_),r.STATIC_DRAW)},this.initGeometry();var T=r.createBuffer();r.bindBuffer(r.ARRAY_BUFFER,T),r.bufferData(r.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,-1,1,1]),r.STATIC_DRAW);var w=null,R=null;this.initNoiseFbo=function(){null!=w&&(r.deleteTexture(w),w=null),null!=R&&(r.deleteFramebuffer(R),R=null);var e=Math.floor(1*a),n=Math.floor(1*i);w=buildTexture(r,NOISE_TEXTURE_UNIT,r.RGBA,r.UNSIGNED_BYTE,e,n,null,r.CLAMP_TO_EDGE,r.CLAMP_TO_EDGE,r.NEAREST,r.NEAREST),R=r.createFramebuffer(),r.bindFramebuffer(r.FRAMEBUFFER,R),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,w,0)},this.initNoiseFbo();var h=buildProgramWrapper(r,buildShader(r,r.VERTEX_SHADER,NOISE_VERTEX_SOURCE),buildShader(r,r.FRAGMENT_SHADER,NOISE_FRAGMENT_SOURCE),{a_position:0});r.useProgram(h.program);var S=null,x=null;this.initSlicesFbo=function(){null!=S&&(r.deleteTexture(S),S=null),null!=x&&(r.deleteFramebuffer(x),x=null),S=buildTexture(r,SLICES_TEXTURE_UNIT,r.RGBA,r.UNSIGNED_BYTE,a,i,null,r.CLAMP_TO_EDGE,r.CLAMP_TO_EDGE,r.NEAREST,r.NEAREST),x=r.createFramebuffer(),r.bindFramebuffer(r.FRAMEBUFFER,x),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,S,0)},this.initSlicesFbo();var A=buildProgramWrapper(r,buildShader(r,r.VERTEX_SHADER,FULLSCREEN_VERTEX_SOURCE),buildShader(r,r.FRAGMENT_SHADER,FULLSCREEN_FRAGMENT_SOURCE),{a_position:0});r.useProgram(A.program),r.uniform1i(A.uniformLocations.u_texture,SLICES_TEXTURE_UNIT),r.uniform1i(A.uniformLocations.u_noise,NOISE_TEXTURE_UNIT);var F=buildProgramWrapper(r,buildShader(r,r.VERTEX_SHADER,OCEAN_VERTEX_SOURCE),buildShader(r,r.FRAGMENT_SHADER,OCEAN_FRAGMENT_SOURCE),{a_position:0,a_texcoord:TEXTURE_COORDINATES_UNIT,a_oceancoord:OCEAN_COORDINATES_UNIT});r.useProgram(F.program),this.applyGuiSettings=function(){r.uniform1f(F.uniformLocations.u_wave_size,o.waveSize),r.uniform3f(F.uniformLocations.u_wave_scale,o.waveScaleX,o.waveScaleY,o.waveScaleZ),r.uniform1f(F.uniformLocations.u_wave_0_direction,o.wave_0_direction),r.uniform1f(F.uniformLocations.u_wave_0_frequency,o.wave_0_frequency),r.uniform1f(F.uniformLocations.u_wave_0_amplitude,o.wave_0_amplitude),r.uniform1f(F.uniformLocations.u_wave_0_steepness,o.wave_0_steepness),r.uniform1f(F.uniformLocations.u_wave_0_speed,o.wave_0_speed),r.uniform1f(F.uniformLocations.u_wave_1_direction,o.wave_1_direction),r.uniform1f(F.uniformLocations.u_wave_1_frequency,o.wave_1_frequency),r.uniform1f(F.uniformLocations.u_wave_1_amplitude,o.wave_1_amplitude),r.uniform1f(F.uniformLocations.u_wave_1_steepness,o.wave_1_steepness),r.uniform1f(F.uniformLocations.u_wave_1_speed,o.wave_1_speed),r.uniform1f(F.uniformLocations.u_wave_2_direction,o.wave_2_direction),r.uniform1f(F.uniformLocations.u_wave_2_frequency,o.wave_2_frequency),r.uniform1f(F.uniformLocations.u_wave_2_amplitude,o.wave_2_amplitude),r.uniform1f(F.uniformLocations.u_wave_2_steepness,o.wave_2_steepness),r.uniform1f(F.uniformLocations.u_wave_2_speed,o.wave_2_speed),r.uniform1f(F.uniformLocations.u_wave_3_direction,o.wave_3_direction),r.uniform1f(F.uniformLocations.u_wave_3_frequency,o.wave_3_frequency),r.uniform1f(F.uniformLocations.u_wave_3_amplitude,o.wave_3_amplitude),r.uniform1f(F.uniformLocations.u_wave_3_steepness,o.wave_3_steepness),r.uniform1f(F.uniformLocations.u_wave_3_speed,o.wave_3_speed);var e=hexToRgb(o.colorSliceBot),n=hexToRgb(o.colorSliceTop);r.uniform3f(F.uniformLocations.u_color_bot,e[0],e[1],e[2]),r.uniform3f(F.uniformLocations.u_color_top,n[0],n[1],n[2]),r.uniform1f(F.uniformLocations.u_color_mark,o.colorMark),r.uniform1f(F.uniformLocations.u_color_shadow,o.colorShadow),r.uniform3f(F.uniformLocations.u_point_light_pos,o.pointLightPosX,o.pointLightPosY,o.pointLightPosZ),r.uniform3f(F.uniformLocations.u_point_light_scale,o.pointLightScaleX,o.pointLightScaleY,o.pointLightScaleZ),r.uniform3f(F.uniformLocations.u_point_light_properties,o.bPointLight,o.pointLightRange,o.pointLightBrightness)},this.applyGuiSettings(),r.enableVertexAttribArray(0),this.resize=function(n,t){($=a!=n||i!=t)&&(a=n,i=t,e.width=a,e.height=i)},this.mouseMoved=function(e,n){s=e,c=n},this.map=function(e,n,t,o,a){return(e-n)/(t-n)*(a-o)+o},this.render=function(e,n,t){e*=o.timeScale,e*=1+o.timeBoost*o.timeBoostScale,u+=e;var s=Math.floor(o.slicesTotal),c=Math.floor(o.sliceSegments),d=!1;(d=(d=(d=(d=d||v!=s)||p!=c)||E!=o.sliceLengthScale)||g!=o.sliceSpaceScale)&&(v=s,p=c,E=o.sliceLengthScale,g=o.sliceSpaceScale,this.initGeometry()),$&&($=!1,o.grainUse&&(this.initNoiseFbo(),this.initSlicesFbo())),o.waveRandomise&&(o.waveRandomise=!1,o.wave_0_direction=Math.random(),o.wave_0_frequency=Math.random(),o.wave_0_amplitude=Math.random(),o.wave_0_steepness=Math.random(),o.wave_0_speed=Math.random(),o.wave_1_direction=Math.random(),o.wave_1_frequency=Math.random(),o.wave_1_amplitude=Math.random(),o.wave_1_steepness=Math.random(),o.wave_1_speed=Math.random(),o.wave_2_direction=Math.random(),o.wave_2_frequency=Math.random(),o.wave_2_amplitude=Math.random(),o.wave_2_steepness=Math.random(),o.wave_2_speed=Math.random(),o.wave_3_direction=Math.random(),o.wave_3_frequency=Math.random(),o.wave_3_amplitude=Math.random(),o.wave_3_steepness=Math.random(),o.wave_3_speed=Math.random()),o.grainUse?(r.bindFramebuffer(r.FRAMEBUFFER,x),r.bindTexture(r.TEXTURE_2D,S)):r.bindFramebuffer(r.FRAMEBUFFER,null),r.viewport(0,0,a,i);var f=hexToRgb(o.colorBackground);r.clearColor(f[0],f[1],f[2],1),r.clear(r.COLOR_BUFFER_BIT|r.DEPTH_BUFFER_BIT),r.enable(r.DEPTH_TEST),r.enableVertexAttribArray(TEXTURE_COORDINATES_UNIT),r.enableVertexAttribArray(OCEAN_COORDINATES_UNIT),r.bindBuffer(r.ARRAY_BUFFER,m),r.vertexAttribPointer(0,3,r.FLOAT,!1,VERT_STRIDE*SIZE_OF_FLOAT,0),r.useProgram(F.program),r.uniform1f(F.uniformLocations.u_time,u),r.uniformMatrix4fv(F.uniformLocations.u_projectionMatrix,!1,n),r.uniformMatrix4fv(F.uniformLocations.u_viewMatrix,!1,t),!1==bProd&&this.applyGuiSettings(),r.drawElements(r.TRIANGLES,_.length,r.UNSIGNED_SHORT,0),r.disableVertexAttribArray(TEXTURE_COORDINATES_UNIT),r.disableVertexAttribArray(OCEAN_COORDINATES_UNIT),!1!=o.grainUse&&(l&&(l=!1,r.bindFramebuffer(r.FRAMEBUFFER,R),r.bindTexture(r.TEXTURE_2D,w),r.viewport(0,0,a,i),r.clearColor(0,0,0,1),r.clear(r.COLOR_BUFFER_BIT|r.DEPTH_BUFFER_BIT),r.bindBuffer(r.ARRAY_BUFFER,T),r.vertexAttribPointer(0,2,r.FLOAT,!1,0,0),r.useProgram(h.program),r.uniform1f(h.uniformLocations.u_width,a),r.uniform1f(h.uniformLocations.u_height,i),r.uniform1f(h.uniformLocations.u_time,u),r.uniform1f(h.uniformLocations.u_grain_size,o.grainSize),r.drawArrays(r.TRIANGLE_STRIP,0,4)),o.grainAnimate&&(l=!0),r.bindFramebuffer(r.FRAMEBUFFER,null),r.activeTexture(r.TEXTURE0+0),r.bindTexture(r.TEXTURE_2D,S),r.activeTexture(r.TEXTURE0+1),r.bindTexture(r.TEXTURE_2D,w),r.viewport(0,0,a,i),r.clearColor(1,1,1,1),r.clear(r.COLOR_BUFFER_BIT|r.DEPTH_BUFFER_BIT),r.bindBuffer(r.ARRAY_BUFFER,T),r.vertexAttribPointer(0,2,r.FLOAT,!1,0,0),r.useProgram(A.program),r.uniform1f(A.uniformLocations.u_grain_amount,o.grainAmount),r.uniform1f(A.uniformLocations.u_grain_luminance,o.grainLuminance),r.drawArrays(r.TRIANGLE_STRIP,0,4),r.activeTexture(r.TEXTURE0+0),r.bindTexture(r.TEXTURE_2D,null),r.activeTexture(r.TEXTURE0+1),r.bindTexture(r.TEXTURE_2D,null))}},main=function(){var e=document.getElementById("simulator"),n=null;bProd||((n=new Stats).showPanel(0),document.body.appendChild(n.dom));var t={mouseEasingX:.02,mouseEasingY:.1,mouseEasedX:.1,mouseEasedY:.1,timeBoostCap:.15,timeBoostScale:120,timeBoostEase:.03,timeBoost:.1,timeScale:1.223922114047288,canvasScale:1,slicesTotal:44,sliceSegments:70,sliceLengthScale:5,sliceSpaceScale:1.3,colorBackground:"#111113",colorSliceBot:"#3C5EE8",colorSliceTop:"#3C5EE8",colorMark:.94,colorShadow:.37,waveScaleX:1,waveScaleY:1,waveScaleZ:1,waveSize:1,waveRandomise:!1,wave_0_direction:.5775967219687211,wave_0_frequency:.22650851841910633,wave_0_amplitude:.4190407590753467,wave_0_steepness:.8602444638305798,wave_0_speed:.3970359063833446,wave_1_direction:.5322950182848999,wave_1_frequency:.20385766657719567,wave_1_amplitude:.39678270484701983,wave_1_steepness:.23783394434006164,wave_1_speed:.23251986333942098,wave_2_direction:.39638990723343603,wave_2_frequency:.10192883328859784,wave_2_amplitude:.04530170368382126,wave_2_steepness:.679525555257319,wave_2_speed:.5436204442058552,wave_3_direction:.5096441664429893,wave_3_frequency:.41483469336523715,wave_3_amplitude:.18120681473528505,wave_3_steepness:.6908509811782743,wave_3_speed:.5436204442058552,camDistance:656.8747034154084,camOffsetX:-686.2505931691833,camOffsetY:-765,camOffsetZ:0,camRotX:0,camRotY:.55,camRotMouseX:.2,camRotMouseY:.2,grainUse:!1,grainAnimate:!1,grainSize:1.5889221478896765,grainAmount:.4190407590753467,grainLuminance:0,bPointLight:!1,pointLightPosX:0,pointLightPosY:0,pointLightPosZ:0,pointLightRange:1e3,pointLightScaleX:1,pointLightScaleY:1,pointLightScaleZ:1,pointLightBrightness:.5};if(!bProd){var o=new dat.GUI,a=o.addFolder("general");a.add(t,"mouseEasingX",0,.02),a.add(t,"mouseEasingY",0,.02),a.add(t,"mouseEasedX",0,1).listen(),a.add(t,"mouseEasedY",0,1).listen(),a.add(t,"timeBoostCap",0,1),a.add(t,"timeBoostScale",0,500),a.add(t,"timeBoostEase",0,1),a.add(t,"timeBoost",0,1).listen(),a.add(t,"timeScale",0,10),a.add(t,"canvasScale",1,10);var i=o.addFolder("slices");i.add(t,"slicesTotal",1,50),i.add(t,"sliceSegments",1,1024),i.add(t,"sliceLengthScale",1,10),i.add(t,"sliceSpaceScale",1,10);var r=o.addFolder("color");r.addColor(t,"colorBackground"),r.addColor(t,"colorSliceBot"),r.addColor(t,"colorSliceTop"),r.add(t,"colorMark",0,1),r.add(t,"colorShadow",0,1);var $=o.addFolder("ocean");$.add(t,"waveScaleX",0,1),$.add(t,"waveScaleY",0,1),$.add(t,"waveScaleZ",0,1),$.add(t,"waveSize",1,10),$.add(t,"waveRandomise");var u=o.addFolder("wave_0");u.add(t,"wave_0_direction",0,1),u.add(t,"wave_0_frequency",0,1),u.add(t,"wave_0_amplitude",0,1),u.add(t,"wave_0_steepness",0,1),u.add(t,"wave_0_speed",0,1);var s=o.addFolder("wave_1");s.add(t,"wave_1_direction",0,1),s.add(t,"wave_1_frequency",0,1),s.add(t,"wave_1_amplitude",0,1),s.add(t,"wave_1_steepness",0,1),s.add(t,"wave_1_speed",0,1);var c=o.addFolder("wave_2");c.add(t,"wave_2_direction",0,1),c.add(t,"wave_2_frequency",0,1),c.add(t,"wave_2_amplitude",0,1),c.add(t,"wave_2_steepness",0,1),c.add(t,"wave_2_speed",0,1);var l=o.addFolder("wave_3");l.add(t,"wave_3_direction",0,1),l.add(t,"wave_3_frequency",0,1),l.add(t,"wave_3_amplitude",0,1),l.add(t,"wave_3_steepness",0,1),l.add(t,"wave_3_speed",0,1);var d=o.addFolder("camera");d.add(t,"camDistance",0,2e3),d.add(t,"camOffsetX",-2e3,2e3),d.add(t,"camOffsetY",-2e3,2e3),d.add(t,"camOffsetZ",-2e3,2e3),d.add(t,"camRotX",-(.5*Math.PI),.5*Math.PI),d.add(t,"camRotY",-(.5*Math.PI),.5*Math.PI),d.add(t,"camRotMouseX",0,1),d.add(t,"camRotMouseY",0,1);var _=o.addFolder("grain");_.add(t,"grainUse"),_.add(t,"grainAnimate"),_.add(t,"grainSize",1,5),_.add(t,"grainAmount",0,1),_.add(t,"grainLuminance",0,2);var _=o.addFolder("point_light");_.add(t,"bPointLight"),_.add(t,"pointLightPosX",-1e3,1e3),_.add(t,"pointLightPosY",-1e3,1e3),_.add(t,"pointLightPosZ",-1e3,1e3),_.add(t,"pointLightRange",0,1e4),_.add(t,"pointLightScaleX",0,1),_.add(t,"pointLightScaleY",0,1),_.add(t,"pointLightScaleZ",0,1),_.add(t,"pointLightBrightness",0,1),o.remember(t)}var m=new Camera(t),f=makePerspectiveMatrix(new Float32Array(16),FOV,MIN_ASPECT,NEAR,FAR),v=new Simulator(e,window.innerWidth,window.innerHeight,t),p=window.innerWidth,E=window.innerHeight,g=0,T=0,w=0,R=0,h=function(n){n.preventDefault();var t=getMousePosition(n,e);g=t.x,T=t.y};e.addEventListener("mousedown",h,!1),e.addEventListener("mousemove",function(n){n.preventDefault();var t=getMousePosition(n,e);g=t.x,T=t.y,v.mouseMoved(g,T)}),e.addEventListener("mouseup",function(e){e.preventDefault()}),window.addEventListener("mouseout",function(e){var n=e.relatedTarget||e.toElement;n&&n.nodeName});var S=function(){var n=window.innerWidth,o=window.innerHeight;if((n*=t.canvasScale)/(o*=t.canvasScale)>MIN_ASPECT)makePerspectiveMatrix(f,FOV,n/o,NEAR,FAR),v.resize(n,o),v.render(1/60,f,m.getViewMatrix()),e.style.top="0px",p=n,E=o;else{var a=n/MIN_ASPECT;makePerspectiveMatrix(f,FOV,n/(a=o),NEAR,FAR),v.resize(n,a),v.render(1/60,f,m.getViewMatrix()),e.style.top=(o-a)*.5+"px",p=n,E=a}};window.addEventListener("resize",S),S();var x=1,A=new Date().getTime();function F(e){for(var n=e.split(",")[0].split(":")[1].split(";")[0],t=atob(e.split(",")[1]),o=new Uint8Array(t.length),a=0;a<t.length;a++)o[a]=t.charCodeAt(a);return new Blob([o.buffer],{type:n})}!function e(o){null!=n&&n.begin();var a=1/60;a=(o-A)/1e3||0,A=o;var i=g/p,r=T/E;t.mouseEasedX+=(i-t.mouseEasedX)*t.mouseEasingX,t.mouseEasedY+=(r-t.mouseEasedY)*t.mouseEasingY;var $=g-w,u=T-R;w=g,R=T;var s,c=Math.sqrt($*$+u*u)/Math.sqrt(p*p+E*E);c>t.timeBoostCap&&(c=t.timeBoostCap),t.timeBoost<c?t.timeBoost=c:t.timeBoost+=(0-t.timeBoost)*t.timeBoostEase;var l=Math.floor(t.canvasScale);x!=l&&(x=l,S()),v.render(a,f,m.getViewMatrix()),null!=n&&n.end(),requestAnimationFrame(e)}()};hasWebGLSupportWithExtensions([])?main():(document.getElementById("error").style.display="block",document.getElementById("footer").style.display="none");