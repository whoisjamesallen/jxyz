var CLEAR_COLOR=[0,0,0,1],GEOMETRY_ORIGIN=[-1e3,-1e3],GEOMETRY_SIZE=2e3,SIZE_OF_FLOAT=4,VERT_STRIDE=7,TEXCOORD_OFFSET=3,OCEANCOORD_OFFSET=5,TEXTURE_COORDINATES_UNIT=1,OCEAN_COORDINATES_UNIT=2,SLICES_TEXTURE_UNIT=0,NOISE_TEXTURE_UNIT=1,FOV=60/180*Math.PI,NEAR=1,FAR=1e4,MIN_ASPECT=16/9,NONE=0,ORBITING=1,CAMERA_DISTANCE=1600,addToVector=function(e,n,t){return e[0]=n[0]+t[0],e[1]=n[1]+t[1],e[2]=n[2]+t[2],e},subtractFromVector=function(e,n,t){return e[0]=n[0]-t[0],e[1]=n[1]-t[1],e[2]=n[2]-t[2],e},multiplyVectorByScalar=function(e,n,t){return e[0]=n[0]*t,e[1]=n[1]*t,e[2]=n[2]*t,e},makeIdentityMatrix=function(e){return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e},makeXRotationMatrix=function(e,n){return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=Math.cos(n),e[6]=Math.sin(n),e[7]=0,e[8]=0,e[9]=-Math.sin(n),e[10]=Math.cos(n),e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e},makeYRotationMatrix=function(e,n){return e[0]=Math.cos(n),e[1]=0,e[2]=-Math.sin(n),e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=Math.sin(n),e[9]=0,e[10]=Math.cos(n),e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e},distanceBetweenVectors=function(e,n){var t=n[0]-e[0],i=n[1]-e[1],o=n[2]-e[2];return Math.sqrt(t*t+i*i+o*o)},lengthOfVector=function(e){var n=e[0],t=e[1],i=e[2];return Math.sqrt(n*n+t*t+i*i)},setVector4=function(e,n,t,i,o){return e[0]=n,e[1]=t,e[2]=i,e[3]=o,e},projectVector4=function(e,n){var t=1/n[3];return e[0]=n[0]*t,e[1]=n[1]*t,e[2]=n[2]*t,e},transformVectorByMatrix=function(e,n,t){var i=n[0],o=n[1],r=n[2],a=n[3];return e[0]=t[0]*i+t[4]*o+t[8]*r+t[12]*a,e[1]=t[1]*i+t[5]*o+t[9]*r+t[13]*a,e[2]=t[2]*i+t[6]*o+t[10]*r+t[14]*a,e[3]=t[3]*i+t[7]*o+t[11]*r+t[15]*a,e},invertMatrix=function(e,n){var t=n[0],i=n[4],o=n[8],r=n[12],a=n[1],u=n[5],$=n[9],c=n[13],s=n[2],f=n[6],l=n[10],m=n[14],_=n[3],v=n[7],d=n[11],p=n[15],E=l*p,T=m*d,R=f*p,w=m*v,g=f*d,A=l*v,S=s*p,x=m*_,h=s*d,F=l*_,O=s*v,b=f*_,U=o*c,y=r*$,N=i*c,I=r*u,L=i*$,M=o*u,C=t*c,D=r*a,B=t*$,P=o*a,X=t*u,z=i*a,q=E*u+w*$+g*c-(T*u+R*$+A*c),G=T*a+S*$+F*c-(E*a+x*$+h*c),V=R*a+x*u+O*c-(w*a+S*u+b*c),Y=A*a+h*u+b*$-(g*a+F*u+O*$),k=1/(t*q+i*G+o*V+r*Y);return e[0]=k*q,e[1]=k*G,e[2]=k*V,e[3]=k*Y,e[4]=k*(T*i+R*o+A*r-(E*i+w*o+g*r)),e[5]=k*(E*t+x*o+h*r-(T*t+S*o+F*r)),e[6]=k*(w*t+S*i+b*r-(R*t+x*i+O*r)),e[7]=k*(g*t+F*i+O*o-(A*t+h*i+b*o)),e[8]=k*(U*v+I*d+L*p-(y*v+N*d+M*p)),e[9]=k*(y*_+C*d+P*p-(U*_+D*d+B*p)),e[10]=k*(N*_+D*v+X*p-(I*_+C*v+z*p)),e[11]=k*(M*_+B*v+z*d-(L*_+P*v+X*d)),e[12]=k*(N*l+M*m+y*f-(L*m+U*f+I*l)),e[13]=k*(B*m+U*s+D*l-(C*l+P*m+y*s)),e[14]=k*(C*f+z*m+I*s-(X*m+N*s+D*f)),e[15]=k*(X*l+L*s+P*f-(B*f+z*l+M*s)),e},premultiplyMatrix=function(e,n,t){var i=t[0],o=t[4],r=t[8],a=t[12],u=t[1],$=t[5],c=t[9],s=t[13],f=t[2],l=t[6],m=t[10],_=t[14],v=t[3],d=t[7],p=t[11],E=t[15],T=n[0],R=n[1],w=n[2],g=n[3];return e[0]=i*T+o*R+r*w+a*g,e[1]=u*T+$*R+c*w+s*g,e[2]=f*T+l*R+m*w+_*g,e[3]=v*T+d*R+p*w+E*g,T=n[4],R=n[5],w=n[6],g=n[7],e[4]=i*T+o*R+r*w+a*g,e[5]=u*T+$*R+c*w+s*g,e[6]=f*T+l*R+m*w+_*g,e[7]=v*T+d*R+p*w+E*g,T=n[8],R=n[9],w=n[10],g=n[11],e[8]=i*T+o*R+r*w+a*g,e[9]=u*T+$*R+c*w+s*g,e[10]=f*T+l*R+m*w+_*g,e[11]=v*T+d*R+p*w+E*g,T=n[12],R=n[13],w=n[14],g=n[15],e[12]=i*T+o*R+r*w+a*g,e[13]=u*T+$*R+c*w+s*g,e[14]=f*T+l*R+m*w+_*g,e[15]=v*T+d*R+p*w+E*g,e},makePerspectiveMatrix=function(e,n,t,i,o){var r=Math.tan(.5*(Math.PI-n)),a=i-o;return e[0]=r/t,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=r,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=o/a,e[11]=-1,e[12]=0,e[13]=0,e[14]=i*o/a,e[15]=0,e},clamp=function(e,n,t){return Math.min(Math.max(e,n),t)},log2=function(e){return Math.log(e)/Math.log(2)},hexToRgb=function(e){var n=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);return n?[parseInt(n[1],16)/255,parseInt(n[2],16)/255,parseInt(n[3],16)/255]:null},buildProgramWrapper=function(e,n,t,i){var o={},r=e.createProgram();for(var a in e.attachShader(r,n),e.attachShader(r,t),i)e.bindAttribLocation(r,i[a],a);e.linkProgram(r);for(var u={},$=e.getProgramParameter(r,e.ACTIVE_UNIFORMS),c=0;c<$;c+=1){var s=e.getActiveUniform(r,c),f=e.getUniformLocation(r,s.name);u[s.name]=f}return o.program=r,o.uniformLocations=u,o},buildShader=function(e,n,t){var i=e.createShader(n);return e.shaderSource(i,t),e.compileShader(i),i},buildTexture=function(e,n,t,i,o,r,a,u,$,c,s){var f=e.createTexture();return e.activeTexture(e.TEXTURE0+n),e.bindTexture(e.TEXTURE_2D,f),e.texImage2D(e.TEXTURE_2D,0,t,o,r,0,t,i,a),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,u),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,$),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,c),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,s),f},buildFramebuffer=function(e,n){var t=e.createFramebuffer();return e.bindFramebuffer(e.FRAMEBUFFER,t),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0),t},epsilon=function(e){return 1e-6>Math.abs(e)?0:e},toCSSMatrix=function(e){return"matrix3d("+epsilon(e[0])+","+-epsilon(e[1])+","+epsilon(e[2])+","+epsilon(e[3])+","+epsilon(e[4])+","+-epsilon(e[5])+","+epsilon(e[6])+","+epsilon(e[7])+","+epsilon(e[8])+","+-epsilon(e[9])+","+epsilon(e[10])+","+epsilon(e[11])+","+epsilon(e[12])+","+-epsilon(e[13])+","+epsilon(e[14])+","+epsilon(e[15])+")"},setPerspective=function(e,n){e.style.WebkitPerspective=n,e.style.perspective=n},setTransformOrigin=function(e,n){e.style.WebkitTransformOrigin=n,e.style.transformOrigin=n},setTransform=function(e,n){e.style.WebkitTransform=n,e.style.transform=n},setText=function(e,n,t){e.textContent=n.toFixed(t)},getMousePosition=function(e,n){var t=n.getBoundingClientRect();return{x:e.clientX-t.left,y:e.clientY-t.top}},hasWebGLSupportWithExtensions=function(e){var n=document.createElement("canvas"),t=null;try{t=n.getContext("webgl")||n.getContext("experimental-webgl")}catch(i){return!1}if(null===t)return!1;for(var o=0;o<e.length;++o)if(null===t.getExtension(e[o]))return!1;return!0},requestAnimationFrame=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.msRequestAnimationFrame,Camera=function(e){var e=e,n=makeIdentityMatrix(new Float32Array(16)),t=new Float32Array(3);this.changeAzimuth=function(n){e.camAzimuth+=n},this.changeElevation=function(n){e.camElevation+=n};var i=makeIdentityMatrix(new Float32Array(16)),o=new Float32Array(16),r=new Float32Array(16),a=makeIdentityMatrix(new Float32Array(16));this.getViewMatrix=function(){return makeIdentityMatrix(n),makeXRotationMatrix(o,e.camElevation),makeYRotationMatrix(r,e.camAzimuth),a[14]=-e.camDistance,i[12]=e.camOffsetX,i[13]=e.camOffsetY,i[14]=e.camOffsetZ,premultiplyMatrix(n,n,i),premultiplyMatrix(n,n,r),premultiplyMatrix(n,n,o),premultiplyMatrix(n,n,a),t[0]=e.camDistance*Math.sin(Math.PI/2-e.camElevation)*Math.sin(-e.camAzimuth),t[1]=e.camDistance*Math.cos(Math.PI/2-e.camElevation),t[2]=e.camDistance*Math.sin(Math.PI/2-e.camElevation)*Math.cos(-e.camAzimuth),n}},OCEAN_VERTEX_SOURCE="precision highp float;\nattribute vec3 a_position;\nattribute vec2 a_texcoord;\nattribute vec2 a_oceancoord;\nvarying vec3 v_position;\nvarying vec2 v_texcoord;\nvarying vec2 v_oceancoord;\nvarying vec3 v_displacement;\nuniform mat4 u_projectionMatrix;\nuniform mat4 u_viewMatrix;\nuniform float u_time;\nuniform float u_size;\nuniform float u_geometrySize;\nuniform float u_wave_size;\nuniform vec3 u_wave_scale;\nuniform vec3 u_color_bot;\nuniform vec3 u_color_top;\nuniform float u_wave_0_direction;\nuniform float u_wave_0_frequency;\nuniform float u_wave_0_amplitude;\nuniform float u_wave_0_steepness;\nuniform float u_wave_0_speed;\nuniform float u_wave_1_direction;\nuniform float u_wave_1_frequency;\nuniform float u_wave_1_amplitude;\nuniform float u_wave_1_steepness;\nuniform float u_wave_1_speed;\nuniform float u_wave_2_direction;\nuniform float u_wave_2_frequency;\nuniform float u_wave_2_amplitude;\nuniform float u_wave_2_steepness;\nuniform float u_wave_2_speed;\nuniform float u_wave_3_direction;\nuniform float u_wave_3_frequency;\nuniform float u_wave_3_amplitude;\nuniform float u_wave_3_steepness;\nuniform float u_wave_3_speed;\nconst float frequencyScale = 0.02;\nconst float amplitudeScale = 100.0;\nconst float steepnessScale = 1.0;\nvec3 gerstner_wave(vec2 position, vec2 direction, float frequency, float amplitude, float steepness, float speed) {\nfloat proj = dot(position, direction);\nfloat theta = proj * frequency + speed;\nfloat height = amplitude * sin(theta);\nfloat maximum_width = steepness * amplitude;\nfloat width = maximum_width * cos(theta);\nvec3 displacement = vec3(0.0);\ndisplacement.x = direction.x * width;\ndisplacement.y = height;\ndisplacement.z = direction.y * width;\nreturn displacement;\n}\nvec3 wave(vec2 position, float direction, float frequency, float amplitude, float steepness, float speed) {\nfloat angle = direction * 3.14159265359 * 2.0;\nvec2 dir = vec2(sin(angle), cos(angle));\nfrequency *= frequencyScale;\namplitude *= amplitudeScale;\nsteepness *= steepnessScale;\nspeed *= u_time;\nreturn gerstner_wave(position, dir, frequency, amplitude, steepness, speed);\n}\nvoid main (void) {\nvec3 displacement = vec3(0.0);\ndisplacement += wave(a_position.xz, u_wave_0_direction, u_wave_0_frequency, u_wave_0_amplitude, u_wave_0_steepness, u_wave_0_speed);\ndisplacement += wave(a_position.xz, u_wave_1_direction, u_wave_1_frequency, u_wave_1_amplitude, u_wave_1_steepness, u_wave_1_speed);\ndisplacement += wave(a_position.xz, u_wave_2_direction, u_wave_2_frequency, u_wave_2_amplitude, u_wave_2_steepness, u_wave_2_speed);\ndisplacement += wave(a_position.xz, u_wave_3_direction, u_wave_3_frequency, u_wave_3_amplitude, u_wave_3_steepness, u_wave_3_speed);\nvec3 position = a_position + displacement * u_wave_scale * vec3(u_wave_size);\nv_position = position;\nv_texcoord = a_texcoord;\nv_oceancoord = a_oceancoord;\nv_displacement = displacement / vec3((u_wave_0_amplitude + u_wave_1_amplitude + u_wave_2_amplitude + u_wave_3_amplitude) * amplitudeScale);\ngl_Position = u_projectionMatrix * u_viewMatrix * vec4(position, 1.0);\n}",OCEAN_FRAGMENT_SOURCE="precision highp float;\nvarying vec3 v_position;\nvarying vec2 v_texcoord;\nvarying vec2 v_oceancoord;\nvarying vec3 v_displacement;\nuniform float u_color_mark;\nuniform float u_color_shadow;\nuniform vec3 u_color_bot;\nuniform vec3 u_color_top;\nfloat map(float value, float inputMin, float inputMax, float outputMin, float outputMax) {\nfloat mapValue = ((value - inputMin) / (inputMax - inputMin) * (outputMax - outputMin) + outputMin);\nreturn clamp(mapValue, 0.0, 1.0);\n}\nvoid main (void) {\nfloat colorStop = map(v_texcoord.y, u_color_mark, 1.0, 0.0, 1.0);\nvec3 color = u_color_bot + (u_color_top - u_color_bot) * colorStop;\nfloat shadowMin = 1.0 - u_color_shadow;\nfloat shadowMax = 1.0;\nfloat shadow = map(v_displacement.y, 0.0, 1.0, shadowMin, shadowMax);\ncolor *= vec3(shadow);\ngl_FragColor = vec4(color, 1.0);\n}",NOISE_VERTEX_SOURCE="attribute vec2 a_position;\nvarying vec2 v_coordinates;\nvoid main (void) {\nv_coordinates = a_position * 0.5 + 0.5;\ngl_Position = vec4(a_position, 0.0, 1.0);\n}",NOISE_FRAGMENT_SOURCE="precision highp float;\nuniform float u_width;\nuniform float u_height;\nuniform float u_time;\nuniform float u_grain_size;\nvarying vec2 v_coordinates;\nconst float permTexUnit = 1.0/256.0;\nconst float permTexUnitHalf = 0.5/256.0;\nvec4 rnm(vec2 tc)\n{\nfloat noise =  sin(dot(tc + vec2(u_time,u_time),vec2(12.9898,78.233))) * 43758.5453;\nfloat noiseR =  fract(noise)*2.0-1.0;\nfloat noiseG =  fract(noise*1.2154)*2.0-1.0;\nfloat noiseB =  fract(noise*1.3453)*2.0-1.0;\nfloat noiseA =  fract(noise*1.3647)*2.0-1.0;\nreturn vec4(noiseR,noiseG,noiseB,noiseA);\n}\nfloat fade(in float t) {\nreturn t*t*t*(t*(t*6.0-15.0)+10.0);\n}\nfloat pnoise3D(in vec3 p)\n{\nvec3 pi = permTexUnit*floor(p)+permTexUnitHalf;\nvec3 pf = fract(p);\nfloat perm00 = rnm(pi.xy).a;\nvec3  grad000 = rnm(vec2(perm00, pi.z)).rgb * 4.0 - 1.0;\nfloat n000 = dot(grad000, pf);\nvec3  grad001 = rnm(vec2(perm00, pi.z + permTexUnit)).rgb * 4.0 - 1.0;\nfloat n001 = dot(grad001, pf - vec3(0.0, 0.0, 1.0));\nfloat perm01 = rnm(pi.xy + vec2(0.0, permTexUnit)).a;\nvec3  grad010 = rnm(vec2(perm01, pi.z)).rgb * 4.0 - 1.0;\nfloat n010 = dot(grad010, pf - vec3(0.0, 1.0, 0.0));\nvec3  grad011 = rnm(vec2(perm01, pi.z + permTexUnit)).rgb * 4.0 - 1.0;\nfloat n011 = dot(grad011, pf - vec3(0.0, 1.0, 1.0));\nfloat perm10 = rnm(pi.xy + vec2(permTexUnit, 0.0)).a;\nvec3  grad100 = rnm(vec2(perm10, pi.z)).rgb * 4.0 - 1.0;\nfloat n100 = dot(grad100, pf - vec3(1.0, 0.0, 0.0));\nvec3  grad101 = rnm(vec2(perm10, pi.z + permTexUnit)).rgb * 4.0 - 1.0;\nfloat n101 = dot(grad101, pf - vec3(1.0, 0.0, 1.0));\nfloat perm11 = rnm(pi.xy + vec2(permTexUnit, permTexUnit)).a;\nvec3  grad110 = rnm(vec2(perm11, pi.z)).rgb * 4.0 - 1.0;\nfloat n110 = dot(grad110, pf - vec3(1.0, 1.0, 0.0));\nvec3  grad111 = rnm(vec2(perm11, pi.z + permTexUnit)).rgb * 4.0 - 1.0;\nfloat n111 = dot(grad111, pf - vec3(1.0, 1.0, 1.0));\nvec4 n_x = mix(vec4(n000, n001, n010, n011), vec4(n100, n101, n110, n111), fade(pf.x));\nvec2 n_xy = mix(n_x.xy, n_x.zw, fade(pf.y));\nfloat n_xyz = mix(n_xy.x, n_xy.y, fade(pf.z));\nreturn n_xyz;\n}\nvec2 coordRot(in vec2 tc, in float angle)\n{\nfloat aspect = u_width/u_height;\nfloat rotX = ((tc.x*2.0-1.0)*aspect*cos(angle)) - ((tc.y*2.0-1.0)*sin(angle));\nfloat rotY = ((tc.y*2.0-1.0)*cos(angle)) + ((tc.x*2.0-1.0)*aspect*sin(angle));\nrotX = ((rotX/aspect)*0.5+0.5);\nrotY = rotY*0.5+0.5;\nreturn vec2(rotX,rotY);\n}\nvoid main (void) {\nvec3 rotOffset = vec3(1.425,3.892,5.835);\nvec2 rotCoordsR = coordRot(v_coordinates, u_time + rotOffset.x);\nvec3 noise = vec3( pnoise3D(vec3(rotCoordsR * vec2(u_width / u_grain_size, u_height / u_grain_size), 0.0)));\ngl_FragColor = vec4(noise, 1.0);\n}",FULLSCREEN_VERTEX_SOURCE="attribute vec2 a_position;\nvarying vec2 v_coordinates;\nvoid main (void) {\nv_coordinates = a_position * 0.5 + 0.5;\ngl_Position = vec4(a_position, 0.0, 1.0);\n}",FULLSCREEN_FRAGMENT_SOURCE="precision highp float;\nuniform sampler2D u_texture;\nuniform sampler2D u_noise;\nuniform float u_grain_amount;\nuniform float u_grain_luminance;\nvarying vec2 v_coordinates;\nvoid main (void) {\nvec3 color = texture2D(u_texture, v_coordinates).rgb;\nvec3 noise = texture2D(u_noise, v_coordinates).rgb;\nvec3 lumcoeff = vec3(0.299,0.587,0.114);\nfloat luminance = mix(0.0,dot(color, lumcoeff), u_grain_luminance);\nfloat lum = smoothstep(0.2,0.0,luminance);\nlum += luminance;\nnoise = mix(noise,vec3(0.0),pow(lum,4.0));\ncolor = color + (noise * u_grain_amount);\ngl_FragColor = vec4(color, 1.0);\n}",Simulator=function(e,n,t,i){var e=e;e.width=n,e.height=t;var o=e.getContext("webgl")||e.getContext("experimental-webgl"),r=!0,i=i,a=0,u=!0,$=[],c=[],s=null,f=null,l=Math.floor(i.slicesTotal),m=Math.floor(i.sliceSegments),_=i.sliceLengthScale,v=i.sliceSpaceScale;this.initGeometry=function(){$=[],c=[];var e,n,t,i,r,a,u,d,p,E,T,R,w,g,A=GEOMETRY_SIZE*_,S=GEOMETRY_SIZE*v,x=.4*GEOMETRY_SIZE,h=-x,F=S/(l-1);for(t=0;t<l;t++){for(e=0,p=t/(l-1),a=t*F-.5*S,E=t*(m+1)*2;e<m+1;e++)for(n=0,i=(u=e/m)*A-.5*A;n<2;n++)r=h+(d=n)*x,$.push(i),$.push(r),$.push(a),$.push(u),$.push(d),$.push(u),$.push(p);for(e=0;e<m;e++)T=E+(e+0)*2+0,R=E+(e+0)*2+1,w=E+(e+1)*2+0,g=E+(e+1)*2+1,c.push(T),c.push(R),c.push(g),c.push(g),c.push(w),c.push(T)}null!=s&&(o.deleteBuffer(s),s=null),null!=f&&(o.deleteBuffer(f),f=null),s=o.createBuffer(),o.bindBuffer(o.ARRAY_BUFFER,s),o.bufferData(o.ARRAY_BUFFER,new Float32Array($),o.STATIC_DRAW),o.vertexAttribPointer(TEXTURE_COORDINATES_UNIT,2,o.FLOAT,!1,VERT_STRIDE*SIZE_OF_FLOAT,TEXCOORD_OFFSET*SIZE_OF_FLOAT),o.vertexAttribPointer(OCEAN_COORDINATES_UNIT,2,o.FLOAT,!1,VERT_STRIDE*SIZE_OF_FLOAT,OCEANCOORD_OFFSET*SIZE_OF_FLOAT),f=o.createBuffer(),o.bindBuffer(o.ELEMENT_ARRAY_BUFFER,f),o.bufferData(o.ELEMENT_ARRAY_BUFFER,new Uint16Array(c),o.STATIC_DRAW)},this.initGeometry();var d=o.createBuffer();o.bindBuffer(o.ARRAY_BUFFER,d),o.bufferData(o.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,-1,1,1]),o.STATIC_DRAW);var p=null,E=null;this.initNoiseFbo=function(){null!=p&&(o.deleteTexture(p),p=null),null!=E&&(o.deleteFramebuffer(E),E=null);var n=Math.floor(1*e.width),t=Math.floor(1*e.height);p=buildTexture(o,NOISE_TEXTURE_UNIT,o.RGBA,o.UNSIGNED_BYTE,n,t,null,o.CLAMP_TO_EDGE,o.CLAMP_TO_EDGE,o.NEAREST,o.NEAREST),E=o.createFramebuffer(),o.bindFramebuffer(o.FRAMEBUFFER,E),o.framebufferTexture2D(o.FRAMEBUFFER,o.COLOR_ATTACHMENT0,o.TEXTURE_2D,p,0)},this.initNoiseFbo();var T=buildProgramWrapper(o,buildShader(o,o.VERTEX_SHADER,NOISE_VERTEX_SOURCE),buildShader(o,o.FRAGMENT_SHADER,NOISE_FRAGMENT_SOURCE),{a_position:0});o.useProgram(T.program);var R=null,w=null;this.initSlicesFbo=function(){null!=R&&(o.deleteTexture(R),R=null),null!=w&&(o.deleteFramebuffer(w),w=null),R=buildTexture(o,SLICES_TEXTURE_UNIT,o.RGBA,o.UNSIGNED_BYTE,e.width,e.height,null,o.CLAMP_TO_EDGE,o.CLAMP_TO_EDGE,o.NEAREST,o.NEAREST),w=o.createFramebuffer(),o.bindFramebuffer(o.FRAMEBUFFER,w),o.framebufferTexture2D(o.FRAMEBUFFER,o.COLOR_ATTACHMENT0,o.TEXTURE_2D,R,0)},this.initSlicesFbo();var g=buildProgramWrapper(o,buildShader(o,o.VERTEX_SHADER,FULLSCREEN_VERTEX_SOURCE),buildShader(o,o.FRAGMENT_SHADER,FULLSCREEN_FRAGMENT_SOURCE),{a_position:0});o.useProgram(g.program),o.uniform1i(g.uniformLocations.u_texture,SLICES_TEXTURE_UNIT),o.uniform1i(g.uniformLocations.u_noise,NOISE_TEXTURE_UNIT);var A=buildProgramWrapper(o,buildShader(o,o.VERTEX_SHADER,OCEAN_VERTEX_SOURCE),buildShader(o,o.FRAGMENT_SHADER,OCEAN_FRAGMENT_SOURCE),{a_position:0,a_texcoord:TEXTURE_COORDINATES_UNIT,a_oceancoord:OCEAN_COORDINATES_UNIT});o.useProgram(A.program),o.uniform1f(A.uniformLocations.u_geometrySize,GEOMETRY_SIZE),o.enableVertexAttribArray(0),this.resize=function(n,t){e.width=n,e.height=t,r=!0},this.render=function(n,t,$){n*=i.timeScale,a+=n;var f=Math.floor(i.slicesTotal),S=Math.floor(i.sliceSegments),x=!1;(x=(x=(x=(x=x||l!=f)||m!=S)||_!=i.sliceLengthScale)||v!=i.sliceSpaceScale)&&(l=f,m=S,_=i.sliceLengthScale,v=i.sliceSpaceScale,this.initGeometry()),r&&(r=!1,this.initNoiseFbo(),this.initSlicesFbo()),i.waveRandomise&&(i.waveRandomise=!1,i.wave_0_direction=Math.random(),i.wave_0_frequency=Math.random(),i.wave_0_amplitude=Math.random(),i.wave_0_steepness=Math.random(),i.wave_0_speed=Math.random(),i.wave_1_direction=Math.random(),i.wave_1_frequency=Math.random(),i.wave_1_amplitude=Math.random(),i.wave_1_steepness=Math.random(),i.wave_1_speed=Math.random(),i.wave_2_direction=Math.random(),i.wave_2_frequency=Math.random(),i.wave_2_amplitude=Math.random(),i.wave_2_steepness=Math.random(),i.wave_2_speed=Math.random(),i.wave_3_direction=Math.random(),i.wave_3_frequency=Math.random(),i.wave_3_amplitude=Math.random(),i.wave_3_steepness=Math.random(),i.wave_3_speed=Math.random()),o.bindFramebuffer(o.FRAMEBUFFER,w),o.bindTexture(o.TEXTURE_2D,R),o.viewport(0,0,e.width,e.height);var h=hexToRgb(i.colorBackground);o.clearColor(h[0],h[1],h[2],1),o.clear(o.COLOR_BUFFER_BIT|o.DEPTH_BUFFER_BIT),o.enable(o.DEPTH_TEST),o.enableVertexAttribArray(TEXTURE_COORDINATES_UNIT),o.enableVertexAttribArray(OCEAN_COORDINATES_UNIT),o.bindBuffer(o.ARRAY_BUFFER,s),o.vertexAttribPointer(0,3,o.FLOAT,!1,VERT_STRIDE*SIZE_OF_FLOAT,0),o.useProgram(A.program),o.uniform1f(A.uniformLocations.u_time,a),o.uniform1f(A.uniformLocations.u_wave_size,i.waveSize),o.uniform3f(A.uniformLocations.u_wave_scale,i.waveScaleX,i.waveScaleY,i.waveScaleZ),o.uniform1f(A.uniformLocations.u_wave_0_direction,i.wave_0_direction),o.uniform1f(A.uniformLocations.u_wave_0_frequency,i.wave_0_frequency),o.uniform1f(A.uniformLocations.u_wave_0_amplitude,i.wave_0_amplitude),o.uniform1f(A.uniformLocations.u_wave_0_steepness,i.wave_0_steepness),o.uniform1f(A.uniformLocations.u_wave_0_speed,i.wave_0_speed),o.uniform1f(A.uniformLocations.u_wave_1_direction,i.wave_1_direction),o.uniform1f(A.uniformLocations.u_wave_1_frequency,i.wave_1_frequency),o.uniform1f(A.uniformLocations.u_wave_1_amplitude,i.wave_1_amplitude),o.uniform1f(A.uniformLocations.u_wave_1_steepness,i.wave_1_steepness),o.uniform1f(A.uniformLocations.u_wave_1_speed,i.wave_1_speed),o.uniform1f(A.uniformLocations.u_wave_2_direction,i.wave_2_direction),o.uniform1f(A.uniformLocations.u_wave_2_frequency,i.wave_2_frequency),o.uniform1f(A.uniformLocations.u_wave_2_amplitude,i.wave_2_amplitude),o.uniform1f(A.uniformLocations.u_wave_2_steepness,i.wave_2_steepness),o.uniform1f(A.uniformLocations.u_wave_2_speed,i.wave_2_speed),o.uniform1f(A.uniformLocations.u_wave_3_direction,i.wave_3_direction),o.uniform1f(A.uniformLocations.u_wave_3_frequency,i.wave_3_frequency),o.uniform1f(A.uniformLocations.u_wave_3_amplitude,i.wave_3_amplitude),o.uniform1f(A.uniformLocations.u_wave_3_steepness,i.wave_3_steepness),o.uniform1f(A.uniformLocations.u_wave_3_speed,i.wave_3_speed);var F=hexToRgb(i.colorSliceBot),O=hexToRgb(i.colorSliceTop);o.uniform3f(A.uniformLocations.u_color_bot,F[0],F[1],F[2]),o.uniform3f(A.uniformLocations.u_color_top,O[0],O[1],O[2]),o.uniform1f(A.uniformLocations.u_color_mark,i.colorMark),o.uniform1f(A.uniformLocations.u_color_shadow,i.colorShadow),o.uniformMatrix4fv(A.uniformLocations.u_projectionMatrix,!1,t),o.uniformMatrix4fv(A.uniformLocations.u_viewMatrix,!1,$),o.drawElements(o.TRIANGLES,c.length,o.UNSIGNED_SHORT,0),o.disableVertexAttribArray(TEXTURE_COORDINATES_UNIT),o.disableVertexAttribArray(OCEAN_COORDINATES_UNIT),u&&(u=!1,o.bindFramebuffer(o.FRAMEBUFFER,E),o.bindTexture(o.TEXTURE_2D,p),o.viewport(0,0,e.width,e.height),o.clearColor(0,0,0,1),o.clear(o.COLOR_BUFFER_BIT|o.DEPTH_BUFFER_BIT),o.bindBuffer(o.ARRAY_BUFFER,d),o.vertexAttribPointer(0,2,o.FLOAT,!1,0,0),o.useProgram(T.program),o.uniform1f(T.uniformLocations.u_width,e.width),o.uniform1f(T.uniformLocations.u_height,e.height),o.uniform1f(T.uniformLocations.u_time,a),o.uniform1f(T.uniformLocations.u_grain_size,i.grainSize),o.drawArrays(o.TRIANGLE_STRIP,0,4)),i.grainAnimate&&(u=!0),o.bindFramebuffer(o.FRAMEBUFFER,null),o.activeTexture(o.TEXTURE0+0),o.bindTexture(o.TEXTURE_2D,R),o.activeTexture(o.TEXTURE0+1),o.bindTexture(o.TEXTURE_2D,p),o.viewport(0,0,e.width,e.height),o.clearColor(1,1,1,1),o.clear(o.COLOR_BUFFER_BIT|o.DEPTH_BUFFER_BIT),o.bindBuffer(o.ARRAY_BUFFER,d),o.vertexAttribPointer(0,2,o.FLOAT,!1,0,0),o.useProgram(g.program),o.uniform1f(g.uniformLocations.u_grain_amount,i.grainAmount),o.uniform1f(g.uniformLocations.u_grain_luminance,i.grainLuminance),o.drawArrays(o.TRIANGLE_STRIP,0,4),o.activeTexture(o.TEXTURE0+0),o.bindTexture(o.TEXTURE_2D,null),o.activeTexture(o.TEXTURE0+1),o.bindTexture(o.TEXTURE_2D,null)}},main=function(){var e=!1,n=0,t=document.getElementById("simulator"),i={bRecord:e,timeScale:1.223922114047288,slicesTotal:44,sliceSegments:256,sliceLengthScale:5,sliceSpaceScale:1.3,colorBackground:"#111113",colorSliceBot:"#3C5EE8",colorSliceTop:"#3C5EE8",colorMark:.94,colorShadow:.37,waveScaleX:1,waveScaleY:1,waveScaleZ:1,waveSize:1,waveRandomise:!1,wave_0_direction:.5775967219687211,wave_0_frequency:.22650851841910633,wave_0_amplitude:.4190407590753467,wave_0_steepness:.8602444638305798,wave_0_speed:.3970359063833446,wave_1_direction:.5322950182848999,wave_1_frequency:.20385766657719567,wave_1_amplitude:.39678270484701983,wave_1_steepness:.23783394434006164,wave_1_speed:.23251986333942098,wave_2_direction:.39638990723343603,wave_2_frequency:.10192883328859784,wave_2_amplitude:.04530170368382126,wave_2_steepness:.679525555257319,wave_2_speed:.5436204442058552,wave_3_direction:.5096441664429893,wave_3_frequency:.41483469336523715,wave_3_amplitude:.18120681473528505,wave_3_steepness:.6908509811782743,wave_3_speed:.5436204442058552,camDistance:656.8747034154084,camOffsetX:-686.2505931691833,camOffsetY:-765,camOffsetZ:0,camAzimuth:.241828828556226,camElevation:.4557310861293477,grainAnimate:!1,grainSize:1.5889221478896765,grainAmount:.4190407590753467,grainLuminance:0},o=new Camera(i),r=makePerspectiveMatrix(new Float32Array(16),FOV,MIN_ASPECT,NEAR,FAR),a=new Simulator(t,window.innerWidth,window.innerHeight,i),u=window.innerWidth,$=window.innerHeight,c=0,s=0,f=NONE,l=function(e){e.preventDefault();var n=getMousePosition(e,t),i=n.x,o=n.y;f=ORBITING,c=i,s=o};t.addEventListener("mousedown",l,!1),t.addEventListener("mousemove",function(e){e.preventDefault();var n=getMousePosition(e,t),i=n.x,r=n.y;f===ORBITING&&(o.changeAzimuth((i-c)/u),o.changeElevation((r-s)/$),c=i,s=r)}),t.addEventListener("mouseup",function(e){e.preventDefault(),f=NONE}),window.addEventListener("mouseout",function(e){var n=e.relatedTarget||e.toElement;n&&"HTML"!==n.nodeName||(f=NONE)});var m=function(){var e=window.innerWidth,n=window.innerHeight;if(e/n>MIN_ASPECT)makePerspectiveMatrix(r,FOV,e/n,NEAR,FAR),a.resize(e,n),t.style.top="0px",u=e,$=n;else{var i=e/MIN_ASPECT;makePerspectiveMatrix(r,FOV,e/(i=n),NEAR,FAR),a.resize(e,i),t.style.top=(n-i)*.5+"px",u=e,$=i}};window.addEventListener("resize",m),m();var _=new Date().getTime();!function u($){var c=e!=i.bRecord;!0==((e=i.bRecord)&&c)&&(n=0);var s=1/60;if(!1==e&&(s=($-_)/1e3||0),_=$,a.render(s,r,o.getViewMatrix()),!0==e){var f=new XMLHttpRequest;f.open("POST","http://localhost:3999/"+n++,!1),f.send(function e(n){for(var t=n.split(",")[0].split(":")[1].split(";")[0],i=atob(n.split(",")[1]),o=new Uint8Array(i.length),r=0;r<i.length;r++)o[r]=i.charCodeAt(r);return new Blob([o.buffer],{type:t})}(t.toDataURL()))}requestAnimationFrame(u)}()};hasWebGLSupportWithExtensions([])?main():(document.getElementById("error").style.display="block",document.getElementById("footer").style.display="none");